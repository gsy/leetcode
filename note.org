* basic calculator
  - 字符串处理，处理成 token 格式，使用 split 切分
  - 表达式很大，得动态的求解，不然就爆栈了
  - 用 stack 怎么计算？
    - a+b?
    - push(a)
    - push(+)
    - push(b)
    - 0 + (a + b)
      - 0 + (1 + 2)
      - 1 + 2
  - 使用了一个栈，在栈中间加上哨兵来解
  - 实际上的思路是多个栈，表达式是 operators + numbers
  - 很不顺的是这个栈要等到 numbers 输入完才能开始计算
** 归类为「编译原理」

* 24-game
  - 生算
  - 4个数字，4中操作
  - 4个数字先选2个，排列 A_4_2 = 4*3 = 12
  - 4个操作选一个 4，前两个数的结果有 12 * 4 = 48
  - 算完之后有3个数，选出其中两个 A_3_2 = 3 * 2 = 6
  - 4个操作选择其中一个， 6 * 4 = 24
** 归类为「暴力」
* removeDuplicateLetters
  - 删除重复的字母
  - 跟查找最长递增子序列类似
** 「动态规划」
* 2-keys-keyboard
** 「递归」
* broken_calculator
** 「递归」「贪心证明」
* 0-1 matrix
  - 暴力求解
  - 应该有更好的办法
** 「暴力」
* 3sums
  - a + b + c = 0
  - 暴力求解？
  - 从 N 个数里面取出3个，加一下看结果是不是 0
  - 因为要找出全部的，所以是 permutaition?
